{"lib/rdoc/generator/shomen.rb":{"methods":["RDoc::Generator::Shomen#modules","RDoc::Generator::Shomen#file_dir","RDoc::Generator::Shomen#ref_list","RDoc::Generator::Shomen#collect_methods","RDoc::Generator::Shomen#class_dir","RDoc::Generator::Shomen#generate_methods","RDoc::Generator::Shomen#files","RDoc::Generator::Shomen#reference?","RDoc::Generator::Shomen#methods_all","RDoc::AnyMethod#source_code_raw","RDoc::Generator::Shomen#types_salient","RDoc::TopLevel#to_h","RDoc::Generator::Shomen#classes_salient","RDoc::Generator::Shomen#modules_hash","RDoc::ClassModule#document_self_or_methods","RDoc::Generator::Shomen#types","RDoc::Generator::Shomen#files_hash","RDoc::Generator::Shomen#modules_salient","RDoc::Generator::Shomen#method_name","RDoc::Generator::Shomen#path_output_relative","RDoc::Generator::Shomen#classes","RDoc::Generator::Shomen#sort_salient","RDoc::Generator::Shomen#types_hash","RDoc::Generator::Shomen#generate_files","RDoc::Generator::Shomen#generate_constants","RDoc::Generator::Shomen#generate_classes","RDoc::AnyMethod#source_code_location","RDoc::Generator::Shomen#generate_scripts","RDoc::Generator::Shomen#types_toplevel","RDoc::Generator::Shomen#debug_msg","RDoc::Generator::Shomen#generate","RDoc::Generator::Shomen#classes_toplevel","RDoc::Generator::Shomen#classes_hash","RDoc::Generator::Shomen#reference_table","RDoc::Generator::Shomen#ref_item","RDoc::Generator::Shomen#modules_toplevel","RDoc::Generator::Shomen#files_toplevel"],"modules":[],"name":"shomen.rb","!":"script","header":"","requires":["rdoc/rdoc","fileutils","pp","pathname","yaml","json","rdoc/rdoc","rdoc/generator","rdoc/generator/markup","rdoc-shomen/metadata","rdoc/parser/c"],"classes":["RDoc::TopLevel","RDoc::Generator::Shomen","RDoc::Parser::C","RDoc::AnyMethod","RDoc::ClassModule"],"functions":["RDoc::Generator::Shomen.new","RDoc::Generator::Shomen.for"],"footer":"","path":"lib/rdoc/generator","constants":[]},"RDoc::TopLevel":{"superclass":"Object","methods":["RDoc::TopLevel#to_h","RDoc::TopLevel#to_json"],"modules":[],"comment":"","name":"TopLevel","!":"class","includes":[],"files":["lib/rdoc/generator/shomen.rb","lib/rdoc-shomen/core_ext/rdoc.rb"],"namespace":"RDoc","classes":[],"functions":[],"constants":[]},"Shomen::TimeDelta::WEEKS":{"comment":"","name":"WEEKS","!":"constant","namespace":"Shomen::TimeDelta","value":"7 * DAYS"},"RDoc::Generator::Shomen#modules":{"comment":"","name":"modules","parent":"RDoc::Generator::Shomen","!":"method","line":"121","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"modules()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 121\n  def modules\n    @modules ||= RDoc::TopLevel.modules.sort\n  end"},"RDoc::Generator::Shomen":{"superclass":"Object","methods":["RDoc::Generator::Shomen#classes","RDoc::Generator::Shomen#classes_toplevel","RDoc::Generator::Shomen#classes_salient","RDoc::Generator::Shomen#classes_hash","RDoc::Generator::Shomen#modules","RDoc::Generator::Shomen#modules_toplevel","RDoc::Generator::Shomen#modules_salient","RDoc::Generator::Shomen#modules_hash","RDoc::Generator::Shomen#types","RDoc::Generator::Shomen#types_toplevel","RDoc::Generator::Shomen#types_salient","RDoc::Generator::Shomen#types_hash","RDoc::Generator::Shomen#files","RDoc::Generator::Shomen#files_toplevel","RDoc::Generator::Shomen#files_hash","RDoc::Generator::Shomen#methods_all","RDoc::Generator::Shomen#class_dir","RDoc::Generator::Shomen#file_dir","RDoc::Generator::Shomen#generate","RDoc::Generator::Shomen#reference_table","RDoc::Generator::Shomen#ref_item","RDoc::Generator::Shomen#ref_list","RDoc::Generator::Shomen#sort_salient","RDoc::Generator::Shomen#reference?","RDoc::Generator::Shomen#path_output_relative","RDoc::Generator::Shomen#generate_constants","RDoc::Generator::Shomen#generate_classes","RDoc::Generator::Shomen#generate_methods","RDoc::Generator::Shomen#generate_scripts","RDoc::Generator::Shomen#generate_files","RDoc::Generator::Shomen#collect_methods","RDoc::Generator::Shomen#method_name","RDoc::Generator::Shomen#debug_msg","RDoc::Generator::Shomen#options","RDoc::Generator::Shomen#path_base","RDoc::Generator::Shomen#path_output"],"modules":[],"comment":"","name":"Shomen","!":"class","includes":["RDocShomen::Metadata"],"files":["lib/rdoc/generator/shomen.rb"],"namespace":"RDoc::Generator","classes":[],"functions":["RDoc::Generator::Shomen.for","RDoc::Generator::Shomen.new"],"constants":["CLASS_DIR","FILE_DIR"]},"RDoc::ClassModule#to_json":{"comment":"","name":"to_json","parent":"RDoc::ClassModule","!":"method","line":"75","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"to_json()","block":null,"file":"lib/rdoc-shomen/core_ext/rdoc.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/core_ext/rdoc.rb, line 75\n  def to_json\n    to_h.to_json\n  end"},"Shomen::TimeDelta::DAYS":{"comment":"","name":"DAYS","!":"constant","namespace":"Shomen::TimeDelta","value":"24 * HOURS"},"RDoc::Generator::Shomen#file_dir":{"comment":"RDoc needs this to function.","name":"file_dir","parent":"RDoc::Generator::Shomen","!":"method","line":"223","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"file_dir()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 223\n  def file_dir  ; FILE_DIR ; end"},"RDoc::Generator::Shomen#ref_list":{"comment":"","name":"ref_list","parent":"RDoc::Generator::Shomen","!":"method","line":"307","arguments":"(keys)","alias_for":null,"singleton":false,"returns":[],"interface":"ref_list(keys)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 307\n  def ref_list(keys)\n    keys.map{ |k| @table[k] || k }\n  end"},"RDoc::Generator::Shomen#collect_methods":{"comment":"","name":"collect_methods","parent":"RDoc::Generator::Shomen","!":"method","line":"523","arguments":"(class_module, singleton=false)","alias_for":null,"singleton":false,"returns":[],"interface":"collect_methods(class_module, singleton=false)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 523\n  def collect_methods(class_module, singleton=false)\n    list = []\n    class_module.method_list.each do |m|\n      next if singleton ^ m.singleton\n      list << method_name(m)\n    end\n    class_module.attributes.each do |a|\n      next if singleton ^ a.singleton\n      #p a.rw\n      case a.rw\n      when :write\n        list << \"#{method_name(a)}=\"\n      else\n        list << method_name(a)\n      end\n    end\n    list.uniq\n  end"},"RDoc::Generator::Shomen#class_dir":{"comment":"RDoc needs this to function.","name":"class_dir","parent":"RDoc::Generator::Shomen","!":"method","line":"219","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"class_dir()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 219\n  def class_dir ; CLASS_DIR ; end"},"RDoc::Generator::Shomen#generate_methods":{"comment":"","name":"generate_methods","parent":"RDoc::Generator::Shomen","!":"method","line":"426","arguments":"(table)","alias_for":null,"singleton":false,"returns":[],"interface":"generate_methods(table)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 426\n  def generate_methods(table)\n    debug_msg \"Generating method documentation:\"\n    methods_all.each do |m|\n      debug_msg \"%s\" % [m.full_name]\n\n      code       = m.source_code_raw\n      file, line = m.source_code_location\n\n      full_name = method_name(m)\n\n      #'prettyname'   => m.pretty_name,\n      #'type'         => m.type, # class or instance\n\n      table[full_name] = {\n        '!'            => (m.singleton ? 'function' : 'method'),\n        'name'         => m.name,\n        'parent'       => m.parent_name,\n        'comment'      => m.comment,\n        'access'       => m.visibility.to_s,\n        'singleton'    => m.singleton,\n        'aliases'      => m.aliases.map{ |a| method_name(a) },\n        'alias_for'    => method_name(m.is_alias_for),\n        'arguments'    => m.params,\n        'block'        => m.block_params,\n        'interface'    => m.arglists,\n        'returns'      => [],\n        'file'         => file,\n        'line'         => line,\n        'source'       => code\n      }\n    end\n    return table\n  end"},"lib/rdoc-shomen/timedelta.rb":{"methods":["Shomen::TimeDelta#time_delta_string"],"modules":["Shomen","Shomen::TimeDelta"],"name":"timedelta.rb","!":"script","header":"","requires":[],"classes":[],"functions":[],"footer":"","path":"lib/rdoc-shomen","constants":[]},"lib/rdoc-shomen.rb":{"methods":[],"modules":[],"name":"rdoc-shomen.rb","!":"script","header":"","requires":["rdoc/generator/shomen"],"classes":[],"functions":[],"footer":"","path":"lib","constants":[]},"RDocShomen::Metadata":{"methods":["RDocShomen::Metadata#metadata","RDocShomen::Metadata#get_metadata","RDocShomen::Metadata#scm"],"modules":[],"comment":"Metadata mixin, needs #path_base.","name":"Metadata","!":"module","includes":[],"files":["lib/rdoc-shomen/metadata.rb"],"namespace":"RDocShomen","classes":[],"functions":[],"constants":[]},"RDoc::Generator::Shomen#files":{"comment":"","name":"files","parent":"RDoc::Generator::Shomen","!":"method","line":"169","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"files()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 169\n  def files\n    @files ||= RDoc::TopLevel.files\n  end"},"RDoc::Parser::C":{"superclass":"Object","methods":["RDoc::Parser::C#find_class_comment"],"modules":[],"comment":"","name":"C","!":"class","includes":[],"files":["lib/rdoc/generator/shomen.rb","lib/rdoc/c_parser_fix.rb","lib/rdoc-shomen/core_ext/rdoc.rb"],"namespace":"RDoc::Parser","classes":[],"functions":[],"constants":[]},"RDoc::Generator::Shomen#reference?":{"comment":"","name":"reference?","parent":"RDoc::Generator::Shomen","!":"method","line":"344","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"reference?()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 344\n  def reference?\n    @reference\n  end"},"RDoc::Generator::Shomen#methods_all":{"comment":"List of all methods in all classes and modules.","name":"methods_all","parent":"RDoc::Generator::Shomen","!":"method","line":"188","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"methods_all()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 188\n  def methods_all\n    @methods_all ||= classes.map{ |m| m.method_list }.flatten.sort\n  end"},"RDoc::AnyMethod#source_code_raw":{"comment":"","name":"source_code_raw","parent":"RDoc::AnyMethod","!":"method","line":"804","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"source_code_raw()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 804\n  def source_code_raw\n    return '' unless @token_stream\n    src = \"\"\n    @token_stream.each do |t|\n      next unless t\n      src << t.text\n    end\n    #add_line_numbers(src)\n    src\n  end"},"RDoc::Generator::Shomen.new":{"comment":"","name":"new","parent":"RDoc::Generator::Shomen","!":"function","line":"334","arguments":"(options)","alias_for":null,"singleton":true,"returns":[],"interface":"new(options)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 334\n  def initialize(options)\n    @options = options\n    #@options.diagram = false  # why?\n    #@reference = options.reference\n\n    @path_base   = Pathname.pwd.expand_path\n    @path_output = Pathname.new(@options.op_dir).expand_path(@path_base)\n  end"},"RDoc::Generator::Shomen#types_salient":{"comment":"","name":"types_salient","parent":"RDoc::Generator::Shomen","!":"method","line":"157","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"types_salient()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 157\n  def types_salient\n    @types_salient ||= sort_salient(types)\n  end"},"RDoc::TopLevel#to_h":{"comment":"","name":"to_h","parent":"RDoc::TopLevel","!":"method","line":"729","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"to_h()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 729\n  def to_h\n    {\n       :path     => path,\n       :name     => base_name,\n       :fullname => full_name,\n       :rootname => absolute_name,\n       :modified => last_modified,\n       :diagram  => diagram\n    }\n  end"},"Object#fileutils":{"comment":"TODO: options = { :verbose => $DEBUG_RDOC, :noop => $dryrun }","name":"fileutils","parent":"Object","!":"method","line":"6","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"fileutils()","block":null,"file":"lib/rdoc-shomen/core_ext/fileutils.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/core_ext/fileutils.rb, line 6\ndef fileutils\n  $dryrun ? FileUtils::DryRun : FileUtils\nend"},"RDoc::Generator::Shomen.for":{"comment":"Standard generator factory method.","name":"for","parent":"RDoc::Generator::Shomen","!":"function","line":"64","arguments":"(options)","alias_for":null,"singleton":true,"returns":[],"interface":"for(options)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 64\n  def self.for(options)\n    new(options)\n  end"},"RDoc::Generator::Shomen#classes_salient":{"comment":"Documented classes and modules sorted by salience first, then by name.","name":"classes_salient","parent":"RDoc::Generator::Shomen","!":"method","line":"109","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"classes_salient()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 109\n  def classes_salient\n    @classes_salient ||= sort_salient(classes)\n  end"},"lib/rdoc/c_parser_fix.rb":{"methods":["RDoc::Parser::C#find_class_comment"],"modules":[],"name":"c_parser_fix.rb","!":"script","header":"","requires":["rdoc/parser/c"],"classes":["RDoc::Parser::C"],"functions":[],"footer":"","path":"lib/rdoc","constants":[]},"lib/rdoc-shomen/core_ext/fileutils.rb":{"methods":["Object#fileutils"],"modules":[],"name":"fileutils.rb","!":"script","header":"","requires":["fileutils"],"classes":[],"functions":[],"footer":"","path":"lib/rdoc-shomen/core_ext","constants":[]},"RDoc::AnyMethod":{"superclass":"Object","methods":["RDoc::AnyMethod#source_code_raw","RDoc::AnyMethod#source_code_location","RDoc::AnyMethod#to_h","RDoc::AnyMethod#to_json"],"modules":[],"comment":"","name":"AnyMethod","!":"class","includes":[],"files":["lib/rdoc/generator/shomen.rb","lib/rdoc-shomen/core_ext/rdoc.rb"],"namespace":"RDoc","classes":[],"functions":[],"constants":[]},"RDoc":{"methods":[],"modules":["Parser","Generator"],"comment":"","name":"RDoc","!":"module","includes":[],"files":[],"namespace":"","classes":["Options","AnyMethod","ClassModule","TopLevel"],"functions":["RDoc.generator_option"],"constants":[]},"RDoc::Parser::C#find_class_comment":{"comment":"","name":"find_class_comment","parent":"RDoc::Parser::C","!":"method","line":"7","arguments":"(class_name, class_meth)","alias_for":null,"singleton":false,"returns":[],"interface":"find_class_comment(class_name, class_meth)","block":null,"file":"lib/rdoc/c_parser_fix.rb","aliases":[],"access":"public","source":"# File lib/rdoc/c_parser_fix.rb, line 7\n    def find_class_comment(class_name, class_meth)\n      comment = nil\n      if @content =~ %{((?>/\\*.*?\\*/\\s+))\n                     (static\\s+)?void\\s+Init_#{class_name}\\s*(?:_\\(\\s*)?\\(\\s*(?:void\\s*)\\)}mi then\n        comment = $1\n      elsif @content =~ %{Document-(?:class|module):\\s#{class_name}\\s*?(?:<\\s+[:,\\w]+)?\\n((?>.*?\\*/))}\n        comment = $1\n      else\n        if @content =~ /rb_define_(class|module)/ then\n          class_name = class_name.split(\"::\").last\n          comments = []\n          @content.split(/(\\/\\*.*?\\*\\/)\\s*?\\n/).each_with_index do |chunk, index|\n            comments[index] = chunk\n            if chunk =~ /rb_define_(class|module).*?\"(#{class_name})\"/ then\n              comment = comments[index-1]\n              break\n            end\n          end\n        end\n      end\n      class_meth.comment = mangle_comment(comment) if comment\n    end"},"RDoc::Generator::Shomen#modules_hash":{"comment":"","name":"modules_hash","parent":"RDoc::Generator::Shomen","!":"method","line":"139","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"modules_hash()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 139\n  def modules_hash\n    @modules_hash ||= RDoc::TopLevel.modules_hash\n  end"},"Numeric::Times":{"methods":[],"modules":[],"comment":"Time constants\n\nTODO: Use RichUnits instead (?)","name":"Times","!":"module","includes":[],"files":["lib/rdoc-shomen/core_ext/times.rb"],"namespace":"Numeric","classes":[],"functions":[],"constants":[]},"RDoc::ClassModule#document_self_or_methods":{"comment":"","name":"document_self_or_methods","parent":"RDoc::ClassModule","!":"method","line":"754","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"document_self_or_methods()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 754\n  def document_self_or_methods\n    document_self || method_list.any?{ |m| m.document_self }\n  end"},"RDoc::Generator::Shomen#types":{"comment":"","name":"types","parent":"RDoc::Generator::Shomen","!":"method","line":"145","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"types()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 145\n  def types\n    @types ||= RDoc::TopLevel.classes.sort\n  end"},"RDoc::Generator::Shomen#files_hash":{"comment":"","name":"files_hash","parent":"RDoc::Generator::Shomen","!":"method","line":"183","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"files_hash()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 183\n  def files_hash\n    @files ||= RDoc::TopLevel.files_hash\n  end"},"RDoc::Generator::Shomen#modules_salient":{"comment":"","name":"modules_salient","parent":"RDoc::Generator::Shomen","!":"method","line":"133","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"modules_salient()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 133\n  def modules_salient\n    @modules_salient ||= sort_salient(modules)\n  end"},"RDoc::Generator::Shomen#method_name":{"comment":"","name":"method_name","parent":"RDoc::Generator::Shomen","!":"method","line":"543","arguments":"(method)","alias_for":null,"singleton":false,"returns":[],"interface":"method_name(method)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 543\n  def method_name(method)\n    return nil if method.nil?\n    if method.singleton\n      i = method.full_name.rindex('::')     \n      method.full_name[0...i] + '.' + method.full_name[i+2..1]\n    else\n      method.full_name\n    end\n  end"},"RDoc::Generator::Shomen::FILE_DIR":{"comment":"Directory where generated files live relative to the root\nTODO: Fix in future version when RDoc fixes.","name":"FILE_DIR","!":"constant","namespace":"RDoc::Generator::Shomen","value":"nil"},"RDoc::Generator::Shomen#path_output_relative":{"comment":"","name":"path_output_relative","parent":"RDoc::Generator::Shomen","!":"method","line":"367","arguments":"(path=nil)","alias_for":null,"singleton":false,"returns":[],"interface":"path_output_relative(path=nil)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 367\n  def path_output_relative(path=nil)\n    if path\n      path.to_s.sub(path_base.to_s+'/', '')\n    else\n      @path_output_relative ||= path_output.to_s.sub(path_base.to_s+'/', '')\n    end\n  end"},"RDoc::Generator::Shomen::CLASS_DIR":{"comment":"Directory where generated classes live relative to the root\nTODO: Fix in future version when RDoc fixes.","name":"CLASS_DIR","!":"constant","namespace":"RDoc::Generator::Shomen","value":"nil"},"Shomen::TimeDelta::YEARS":{"comment":"","name":"YEARS","!":"constant","namespace":"Shomen::TimeDelta","value":"365.25 * DAYS"},"Shomen::TimeDelta::MONTHS":{"comment":"","name":"MONTHS","!":"constant","namespace":"Shomen::TimeDelta","value":"30 * DAYS"},"RDoc::Generator::Shomen#classes":{"comment":"In the world of the RDoc Generators #classes is the same as \n#all_classes_and_modules. Well, except that its sorted too.\nFor classes sans modules, see #types.","name":"classes","parent":"RDoc::Generator::Shomen","!":"method","line":"97","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"classes()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 97\n  def classes\n    @classes ||= RDoc::TopLevel.all_classes_and_modules.sort\n  end"},"RDoc::Generator::Shomen#sort_salient":{"comment":"","name":"sort_salient","parent":"RDoc::Generator::Shomen","!":"method","line":"315","arguments":"(classes)","alias_for":null,"singleton":false,"returns":[],"interface":"sort_salient(classes)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 315\n  def sort_salient(classes)\n    nscounts = classes.inject({}) do |counthash, klass|\n      top_level = klass.full_name.gsub( /::.*/, '' )\n      counthash[top_level] ||= 0\n      counthash[top_level] += 1\n      counthash\n    end\n    # Sort based on how often the top level namespace occurs, and then on the\n    # name of the module -- this works for projects that put their stuff into\n    # a namespace, of course, but doesn't hurt if they don't.\n    classes.sort_by do |klass|\n      top_level = klass.full_name.gsub( /::.*/, '' )\n      [nscounts[top_level] * 1, klass.full_name]\n    end.select do |klass|\n      klass.document_self\n    end\n  end"},"RDoc::Generator::Shomen#types_hash":{"comment":"","name":"types_hash","parent":"RDoc::Generator::Shomen","!":"method","line":"163","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"types_hash()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 163\n  def types_hash\n    @types_hash ||= RDoc::TopLevel.classes_hash\n  end"},"RDoc::AnyMethod#to_json":{"comment":"","name":"to_json","parent":"RDoc::AnyMethod","!":"method","line":"104","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"to_json()","block":null,"file":"lib/rdoc-shomen/core_ext/rdoc.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/core_ext/rdoc.rb, line 104\n  def to_json\n    to_h.to_json\n  end"},"RDoc::TopLevel#to_json":{"comment":"","name":"to_json","parent":"RDoc::TopLevel","!":"method","line":"47","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"to_json()","block":null,"file":"lib/rdoc-shomen/core_ext/rdoc.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/core_ext/rdoc.rb, line 47\n  def to_json\n    to_h.to_json\n  end"},"RDoc::Generator::Shomen#generate_files":{"comment":"Generate entries for whole information files, e.g. README files.","name":"generate_files","parent":"RDoc::Generator::Shomen","!":"method","line":"511","arguments":"(table)","alias_for":null,"singleton":false,"returns":[],"interface":"generate_files(table)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 511\n  def generate_files(table)\n    files_toplevel.each do |file|\n      table[file.full_name] = {\n        \"!\"     => \"file\",\n        \"name\"  => File.basename(file.full_name),\n        \"path\"  => File.dirname(file.full_name),\n        \"text\"  => file.comment\n      }\n    end\n  end"},"Shomen":{"methods":[],"modules":["TimeDelta"],"comment":"","name":"Shomen","!":"module","includes":[],"files":["lib/rdoc-shomen/timedelta.rb"],"namespace":"","classes":[],"functions":[],"constants":[]},"RDocShomen::Metadata#metadata":{"comment":"","name":"metadata","parent":"RDocShomen::Metadata","!":"method","line":"11","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"metadata()","block":null,"file":"lib/rdoc-shomen/metadata.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/metadata.rb, line 11\n    def metadata\n      @metadata ||= get_metadata\n    end"},"RDoc::Generator::Shomen#generate_constants":{"comment":"","name":"generate_constants","parent":"RDoc::Generator::Shomen","!":"method","line":"376","arguments":"(table)","alias_for":null,"singleton":false,"returns":[],"interface":"generate_constants(table)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 376\n  def generate_constants(table)\n    debug_msg \"Generating constant documentation:\"\n    classes.each do |base|\n      base.constants.each do |c|\n        full_name = \"#{base.full_name}::#{c.name}\"\n        debug_msg \"%s\" % [full_name]\n        table[full_name] = {\n          \"!\"         => \"constant\",\n          \"name\"      => c.name,\n          \"namespace\" => \"#{base.full_name}\",\n          \"comment\"   => c.comment, # description\n          \"value\"     => c.value\n        }\n      end\n    end\n    return table     \n  end"},"RDoc::Options#rdoc_parse":{"comment":"alias_method :rdoc_initialize, :initialize\ndef initialize\n  rdoc_initialize\n  @generator = RDoc::Generator::RDazzle\nend","name":"rdoc_parse","parent":"RDoc::Options","!":"method","line":0,"arguments":"(argv)","alias_for":"RDoc::Options#parse","singleton":false,"returns":[],"interface":"rdoc_parse(argv)","block":null,"file":"(unknown)","aliases":[],"access":"public","source":""},"RDoc::Generator::Shomen#generate_classes":{"comment":"Generate a documentation file for each class","name":"generate_classes","parent":"RDoc::Generator::Shomen","!":"method","line":"395","arguments":"(table)","alias_for":null,"singleton":false,"returns":[],"interface":"generate_classes(table)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 395\n  def generate_classes(table)\n    debug_msg \"Generating class documentation:\"\n\n    classes.each do |c|\n      debug_msg \"%s (%s)\" % [ c.full_name, c.path ]\n      #outfile    = self.path_output + klass.path\n      #rel_prefix = self.path_output.relative_path_from(outfile.dirname)\n      #debug_msg \"rendering #{path_output_relative(outfile)}\"\n      #self.render_template(templatefile, outfile, :klass=>klass, :rel_prefix=>rel_prefix)\n\n      data = {}\n      data[\"!\"]          = (c.type == 'class' ? \"class\" : \"module\")\n      data[\"name\"]       = c.name\n      data[\"namespace\"]  = c.full_name.split('::')[0...1].join('::')\n      data[\"includes\"]   = c.includes.map{ |x| x.name }\n      #data[\"extended\"]  = []  # TODO: how?\n      data[\"comment\"]    = c.comment\n      data[\"constants\"]  = c.constants.map{ |x| x.name }\n      data[\"modules\"]    = c.modules.map{ |x| x.name }\n      data[\"classes\"]    = c.classes.map{ |x| x.name }\n      data[\"functions\"]  = collect_methods(c, true)\n      data[\"methods\"]    = collect_methods(c, false)\n      data[\"files\"]      = c.in_files.map{ |x| x.full_name }\n      data[\"superclass\"] = c.superclass.full_name if c.type == 'class'\n\n      table[c.full_name] = data\n    end\n    return table\n  end"},"RDoc::AnyMethod#source_code_location":{"comment":"","name":"source_code_location","parent":"RDoc::AnyMethod","!":"method","line":"816","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"source_code_location()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 816\n  def source_code_location\n    src = source_code_raw\n    if md = /File (.*?), line (\\d+)/.match(src)\n      file = md[1]\n      line = md[2]\n    else\n      file = \"(unknown)\"\n      line = 0\n    end\n    return file, line\n  end"},"RDoc::Parser":{"methods":[],"modules":[],"comment":"","name":"Parser","!":"module","includes":[],"files":[],"namespace":"RDoc","classes":["C"],"functions":[],"constants":[]},"RDocShomen":{"methods":[],"modules":["Metadata"],"comment":"","name":"RDocShomen","!":"module","includes":[],"files":["lib/rdoc-shomen/metadata.rb"],"namespace":"","classes":[],"functions":[],"constants":[]},"RDoc::Generator::Shomen#generate_scripts":{"comment":"Generate a documentation file for each file.","name":"generate_scripts","parent":"RDoc::Generator::Shomen","!":"method","line":"464","arguments":"(table)","alias_for":null,"singleton":false,"returns":[],"interface":"generate_scripts(table)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 464\n  def generate_scripts(table)\n    debug_msg \"Generating file documentation in #{path_output_relative}:\"\n    #templatefile = self.path_template + 'file.rhtml'\n\n    files.each do |file|\n      debug_msg \"%s\" % [file.full_name]\n\n      #rel_prefix  = self.path_output.relative_path_from(outfile.dirname)\n      #context     = binding()\n      #debug_msg \"rendering #{path_output_relative(outfile)}\"\n\n      modules = table.select { |k, h|\n        h['!'] == 'module' && h['files'].include?(file.full_name)\n      }.map{ |k, h| k }\n\n      classes = table.select { |k, h|\n        h['!'] == 'class' && h['files'].include?(file.full_name)\n      }.map{ |k, h| k }\n\n      functions = table.select { |k, h|\n        h['!'] == 'function' && h['file'] == file.full_name\n      }.map{ |k, h| k }\n\n      methods = table.select { |k, h|\n        h['!'] == 'method' && h['file'] == file.full_name\n      }.map{ |k, h| k }\n\n      table[file.full_name] = {\n        \"!\"          => \"script\",\n        \"name\"       => File.basename(file.full_name),\n        \"path\"       => File.dirname(file.full_name),\n        \"header\"     => \"\", # TODO\n        \"footer\"     => \"\", # TODO\n        \"requires\"   => file.requires.map{ |r| r.name },\n        \"constants\"  => file.constants.map{ |c| c.full_name },\n        \"modules\"    => modules,   #file.modules.map{ |x| x.name },\n        \"classes\"    => classes,   #file.classes.map{ |x| x.name },\n        \"functions\"  => functions, #collect_methods(file, true),\n        \"methods\"    => methods    #collect_methods(file, false)\n      }\n\n      #self.render_template(templatefile, outfile, :file=>file, :rel_prefix=>rel_prefix)\n    end\n    return table\n  end"},"RDocShomen::Metadata#scm":{"comment":"","name":"scm","parent":"RDocShomen::Metadata","!":"method","line":"55","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"scm()","block":null,"file":"lib/rdoc-shomen/metadata.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/metadata.rb, line 55\n    def scm\n      Dir[File.join(path_base.to_s,\"{.svn,.git}\")].first\n    end"},"RDocShomen::Metadata#get_metadata":{"comment":"TODO: Need a better way to determine if POM::Metadata exists.","name":"get_metadata","parent":"RDocShomen::Metadata","!":"method","line":"16","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"get_metadata()","block":null,"file":"lib/rdoc-shomen/metadata.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/metadata.rb, line 16\n    def get_metadata\n      data = OpenStruct.new\n      begin\n        require 'pom/metadata'\n        pom = POM::Metadata.new(path_base)\n        raise LoadError unless pom.name\n        data.title       = pom.title\n        data.version     = pom.version\n        data.subtitle    = nil #pom.subtitle\n        data.homepage    = pom.homepage\n        data.resources   = pom.resources\n        data.mailinglist = pom.resources.mailinglist\n        data.development = pom.resources.development\n        data.forum       = pom.forum\n        data.wiki        = pom.wiki\n        data.blog        = pom.blog\n        data.copyright   = pom.copyright\n      rescue LoadError\n        if file = Dir[path_base + '*.gemspec'].first\n          gem = YAML.load(file)\n          data.title       = gem.title\n          data.version     = gem.version\n          data.subtitle    = nil\n          date.homepage    = gem.homepage\n          data.mailinglist = gem.email\n          data.development = nil\n          data.forum       = nil\n          data.wiki        = nil\n          data.blog        = nil\n          data.copyright   = nil\n        else\n          puts \"No Metadata!\"\n          # TODO: we may be able to develop some other hueristics here, but for now, nope.\n        end\n      end\n      return data\n    end"},"lib/rdoc-shomen/metadata.rb":{"methods":["RDocShomen::Metadata#metadata","RDocShomen::Metadata#scm","RDocShomen::Metadata#get_metadata"],"modules":["RDocShomen::Metadata","RDocShomen"],"name":"metadata.rb","!":"script","header":"","requires":["ostruct","pom/metadata"],"classes":[],"functions":[],"footer":"","path":"lib/rdoc-shomen","constants":[]},"RDoc::Generator::Shomen#types_toplevel":{"comment":"","name":"types_toplevel","parent":"RDoc::Generator::Shomen","!":"method","line":"151","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"types_toplevel()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 151\n  def types_toplevel\n    @types_toplevel ||= types.select {|klass| !(RDoc::ClassModule === klass.parent) }\n  end"},"RDoc::Generator::Shomen#debug_msg":{"comment":"Output progress information if rdoc debugging is enabled","name":"debug_msg","parent":"RDoc::Generator::Shomen","!":"method","line":"682","arguments":"(msg)","alias_for":null,"singleton":false,"returns":[],"interface":"debug_msg(msg)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"protected","source":"# File lib/rdoc/generator/shomen.rb, line 682\n  def debug_msg(msg)\n    return unless $DEBUG_RDOC\n    case msg[1,1]\n      when '.' then tab = \"= \"\n      when ':' then tab = \"== \"\n      else          tab = \"* \"\n    end\n    $stderr.puts(tab + msg)\n  end"},"RDoc::Generator::Shomen#generate":{"comment":"Build the initial indices and output objects\nbased on an array of top level objects containing\nthe extracted information.","name":"generate","parent":"RDoc::Generator::Shomen","!":"method","line":"229","arguments":"(files)","alias_for":null,"singleton":false,"returns":[],"interface":"generate(files)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 229\n  def generate(files)\n    @files_rdoc = files.sort\n\n    @table = {}\n\n    generate_constants(@table)\n    generate_classes(@table)\n    generate_methods(@table)\n    generate_scripts(@table)   # have to do this last b/c it depends on the others\n    #generate_files(@table)\n\n#pp table #.select{ |k, h| h['!'] == 'script' }\n\n    #file = File.join(@path_output, 'rdoc.jsync')\n\n    yaml = @table.to_yaml\n    File.open('rdoc.yaml', 'w'){ |f| f << yaml }\n\n    json = JSON.generate(@table)\n    File.open('rdoc.json', 'w') do |f|\n      f << json\n    end\n\n    ref_table = reference_table(@table)\n\n    yaml  = ref_table.to_yaml\n    File.open('rdoc2.yaml', 'w'){ |f| f << yaml }\n    \n    # TODO: JSYNC\n\n  #rescue StandardError => err\n  #  debug_msg \"%s: %s\\n  %s\" % [ err.class.name, err.message, err.backtrace.join(\"\\n  \") ]\n  #  raise err\n  end"},"Shomen::TimeDelta::MINUTES":{"comment":"","name":"MINUTES","!":"constant","namespace":"Shomen::TimeDelta","value":"60"},"RDoc::Generator::Shomen#classes_toplevel":{"comment":"Only toplevel classes and modules.","name":"classes_toplevel","parent":"RDoc::Generator::Shomen","!":"method","line":"103","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"classes_toplevel()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 103\n  def classes_toplevel\n    @classes_toplevel ||= classes.select {|klass| !(RDoc::ClassModule === klass.parent) }\n  end"},"RDoc::Generator::Shomen#classes_hash":{"comment":"","name":"classes_hash","parent":"RDoc::Generator::Shomen","!":"method","line":"115","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"classes_hash()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 115\n  def classes_hash\n    @classes_hash ||= RDoc::TopLevel.modules_hash.merge(RDoc::TopLevel.classes_hash)\n  end"},"RDoc::Options":{"superclass":"Object","methods":["RDoc::Options#parse","RDoc::Options#rdoc_parse"],"modules":[],"comment":"","name":"Options","!":"class","includes":[],"files":["lib/rdoc/discover.rb"],"namespace":"RDoc","classes":[],"functions":[],"constants":[]},"Shomen::TimeDelta::HOURS":{"comment":"","name":"HOURS","!":"constant","namespace":"Shomen::TimeDelta","value":"60 * MINUTES"},"RDoc::AnyMethod#to_h":{"comment":"NOTE: dont_rename_initialize isn't used","name":"to_h","parent":"RDoc::AnyMethod","!":"method","line":"83","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"to_h()","block":null,"file":"lib/rdoc-shomen/core_ext/rdoc.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/core_ext/rdoc.rb, line 83\n  def to_h\n    {\n      :name         => name,\n      :fullname     => full_name,\n      :prettyname   => pretty_name,\n      :path         => path,\n      :type         => type,\n      :visibility   => visibility,\n      :blockparams  => block_params,\n      :singleton    => singleton,\n      :text         => text,\n      :aliases      => aliases,\n      :aliasfor     => is_alias_for,\n      :aref         => aref,\n      :parms        => params,\n      :callseq      => call_seq\n      #:paramseq     => param_seq,\n    }\n  end"},"Numeric":{"superclass":"Object","methods":[],"modules":["Times"],"comment":"Extend Numeric with time constants","name":"Numeric","!":"class","includes":[],"files":["lib/rdoc-shomen/core_ext/times.rb"],"namespace":"","classes":[],"functions":[],"constants":[]},"Object":{"superclass":"Object","methods":["Object#fileutils"],"modules":[],"comment":"","name":"Object","!":"class","includes":[],"files":[],"namespace":"","classes":[],"functions":[],"constants":[]},"RDoc::Generator::Shomen#reference_table":{"comment":"","name":"reference_table","parent":"RDoc::Generator::Shomen","!":"method","line":"265","arguments":"(table)","alias_for":null,"singleton":false,"returns":[],"interface":"reference_table(table)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 265\n  def reference_table(table)\n    debug_msg \"== Generating Reference Table\"\n    new_table = {}\n    table.each do |key, entry|\n      debug_msg \"%s\" % [key]\n      data = entry.dup\n      new_table[key] = data\n      case data['!']\n      when 'script'\n        data[\"constants\"]  = ref_list(data[\"constants\"])\n        data[\"modules\"]    = ref_list(data[\"modules\"])\n        data[\"classes\"]    = ref_list(data[\"classes\"])\n        data[\"functions\"]  = ref_list(data[\"functions\"])\n        data[\"methods\"]    = ref_list(data[\"methods\"])\n      when 'file'\n      when 'constant'\n        data[\"namespace\"]  = ref_item(data[\"namespace\"])\n      when 'module', 'class'\n        data[\"namespace\"]  = ref_item(data[\"namespace\"])\n        data[\"includes\"]   = ref_list(data[\"includes\"])\n        #data[\"extended\"]  = ref_list(data[\"extended\"])\n        data[\"constants\"]  = ref_list(data[\"constants\"])\n        data[\"modules\"]    = ref_list(data[\"modules\"])\n        data[\"classes\"]    = ref_list(data[\"classes\"])\n        data[\"functions\"]  = ref_list(data[\"functions\"])\n        data[\"methods\"]    = ref_list(data[\"methods\"])\n        data[\"files\"]      = ref_list(data[\"files\"])\n        data[\"superclass\"] = ref_item(data[\"superclass\"]) if data.key?(\"superclass\")\n      when 'method', 'function'\n        data[\"parent\"]     = ref_item(data[\"parent\"])\n        data[\"file\"]       = ref_item(data[\"file\"])\n      end\n    end\n    new_table\n  end"},"RDoc::ClassModule":{"superclass":"Object","methods":["RDoc::ClassModule#with_documentation?","RDoc::ClassModule#document_self_or_methods","RDoc::ClassModule#to_h","RDoc::ClassModule#to_json"],"modules":[],"comment":"","name":"ClassModule","!":"class","includes":[],"files":["lib/rdoc/generator/shomen.rb","lib/rdoc-shomen/core_ext/rdoc.rb"],"namespace":"RDoc","classes":[],"functions":[],"constants":[]},"RDoc::Generator":{"methods":[],"modules":[],"comment":"","name":"Generator","!":"module","includes":[],"files":[],"namespace":"RDoc","classes":["Shomen"],"functions":[],"constants":[]},"lib/rdoc-shomen/core_ext/times.rb":{"methods":[],"modules":["Numeric::Times"],"name":"times.rb","!":"script","header":"","requires":[],"classes":["Numeric"],"functions":[],"footer":"","path":"lib/rdoc-shomen/core_ext","constants":[]},"RDoc::Generator::Shomen#ref_item":{"comment":"","name":"ref_item","parent":"RDoc::Generator::Shomen","!":"method","line":"302","arguments":"(key)","alias_for":null,"singleton":false,"returns":[],"interface":"ref_item(key)","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 302\n  def ref_item(key)\n    @table[key] || key\n  end"},"Shomen::TimeDelta":{"methods":["Shomen::TimeDelta#time_delta_string"],"modules":[],"comment":"","name":"TimeDelta","!":"module","includes":[],"files":["lib/rdoc-shomen/timedelta.rb"],"namespace":"Shomen","classes":[],"functions":[],"constants":["MINUTES","HOURS","DAYS","WEEKS","MONTHS","YEARS"]},"lib/rdoc/discover.rb":{"methods":["RDoc::Options#parse"],"modules":[],"name":"discover.rb","!":"script","header":"","requires":["rubygems","rdoc/generator/shomen"],"classes":["RDoc::Options"],"functions":["RDoc.generator_option"],"footer":"","path":"lib/rdoc","constants":[]},"RDoc::ClassModule#with_documentation?":{"comment":"","name":"with_documentation?","parent":"RDoc::ClassModule","!":"method","line":"55","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"with_documentation?()","block":null,"file":"lib/rdoc-shomen/core_ext/rdoc.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/core_ext/rdoc.rb, line 55\n  def with_documentation?\n    document_self_or_methods || classes_and_modules.any?{ |c| c.with_documentation? }\n  end"},"RDoc::ClassModule#to_h":{"comment":"","name":"to_h","parent":"RDoc::ClassModule","!":"method","line":"65","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"to_h()","block":null,"file":"lib/rdoc-shomen/core_ext/rdoc.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/core_ext/rdoc.rb, line 65\n  def to_h\n    {\n      :name       => name,\n      :fullname   => full_name,\n      :type       => type,\n      :path       => path,\n      :superclass => module? ? nil : superclass\n    }\n  end"},"RDoc::Generator::Shomen#modules_toplevel":{"comment":"","name":"modules_toplevel","parent":"RDoc::Generator::Shomen","!":"method","line":"127","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"modules_toplevel()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 127\n  def modules_toplevel\n    @modules_toplevel ||= modules.select {|klass| !(RDoc::ClassModule === klass.parent) }\n  end"},"RDoc::Options#parse":{"comment":"","name":"parse","parent":"RDoc::Options","!":"method","line":"35","arguments":"(argv)","alias_for":null,"singleton":false,"returns":[],"interface":"parse(argv)","block":null,"file":"lib/rdoc/discover.rb","aliases":["RDoc::Options#rdoc_parse"],"access":"public","source":"# File lib/rdoc/discover.rb, line 35\n    def parse(argv)\n      rdoc_parse(argv)\n      #begin\n      if blk = RDoc.generator_option(@template)\n        @generator = blk.call\n      end\n      #if @template == 'shomen'\n      #  require \"rdoc-shomen/generator\"\n      #  @generator = RDocShomen::Generator\n      #end\n      #rescue LoadError\n      #end\n    end"},"lib/rdoc-shomen/core_ext/rdoc.rb":{"methods":["RDoc::ClassModule#to_json","RDoc::AnyMethod#to_json","RDoc::TopLevel#to_json","RDoc::AnyMethod#to_h","RDoc::ClassModule#with_documentation?","RDoc::ClassModule#to_h"],"modules":[],"name":"rdoc.rb","!":"script","header":"","requires":["rdoc/parser/c"],"classes":["RDoc::TopLevel","RDoc::Parser::C","RDoc::AnyMethod","RDoc::ClassModule"],"functions":[],"footer":"","path":"lib/rdoc-shomen/core_ext","constants":[]},"Shomen::TimeDelta#time_delta_string":{"comment":"Return a string describing the amount of time in the given number of\nseconds in terms a human can understand easily.","name":"time_delta_string","parent":"Shomen::TimeDelta","!":"method","line":"14","arguments":"(seconds)","alias_for":null,"singleton":false,"returns":[],"interface":"time_delta_string(seconds)","block":null,"file":"lib/rdoc-shomen/timedelta.rb","aliases":[],"access":"public","source":"# File lib/rdoc-shomen/timedelta.rb, line 14\n    def time_delta_string(seconds)\n      return 'less than a minute' if seconds < MINUTES\n      return (seconds / MINUTES).to_s + ' minute' + (seconds/60 == 1 ? '' : 's') if seconds < (50 * MINUTES)\n      return 'about one hour' if seconds < (90 * MINUTES)\n      return (seconds / HOURS).to_s + ' hours' if seconds < (18 * HOURS)\n      return 'one day' if seconds < DAYS\n      return 'about one day' if seconds < (2 * DAYS)\n      return (seconds / DAYS).to_s + ' days' if seconds < WEEKS\n      return 'about one week' if seconds < (2 * WEEKS)\n      return (seconds / WEEKS).to_s + ' weeks' if seconds < (3 * MONTHS)\n      return (seconds / MONTHS).to_s + ' months' if seconds < YEARS\n      return (seconds / YEARS).to_s + ' years'\n    end"},"RDoc::Generator::Shomen#files_toplevel":{"comment":"List of toplevel files. RDoc supplies this via the #generate method.","name":"files_toplevel","parent":"RDoc::Generator::Shomen","!":"method","line":"175","arguments":"()","alias_for":null,"singleton":false,"returns":[],"interface":"files_toplevel()","block":null,"file":"lib/rdoc/generator/shomen.rb","aliases":[],"access":"public","source":"# File lib/rdoc/generator/shomen.rb, line 175\n  def files_toplevel\n    @files_toplevel ||= (\n      @files_rdoc.select{ |f| f.parser == RDoc::Parser::Simple }\n    )\n  end"},"RDoc.generator_option":{"comment":"","name":"generator_option","parent":"RDoc","!":"function","line":"16","arguments":"(name, &blk)","alias_for":null,"singleton":true,"returns":[],"interface":"generator_option(name, &blk)","block":null,"file":"lib/rdoc/discover.rb","aliases":[],"access":"public","source":"# File lib/rdoc/discover.rb, line 16\n  def RDoc.generator_option(name, &blk)\n    @_generators ||= {}\n    if blk\n      @_generators[name.to_s] = blk\n    else\n      @_generators[name.to_s]\n    end\n  end"}}